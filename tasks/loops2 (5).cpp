#include <iostream>
#include <time.h>
#include <Windows.h>
using namespace std;

/* 1. Определить, является ли введённое число любой разрядности палиндромом (например, 1234321 – палиндром, 12345 – не палиндром). */

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	int n, t;
//	int c = 0;
//	int h1 = 0, h2 = 0;
//
//	cout << "Введите число: ";
//	cin >> n;
//
//	t = n;
//	
//	//Количество разрядов
//	while (t > 0)
//	{
//		t /= 10;
//		c++;
//	}
//
//	//Половина 1
//	for (int i = 1; i <= c / 2; i++)
//	{
//		h1 += n % 10;
//
//		if(i != c / 2)
//			h1 *= 10;
//
//		n /= 10;
//	}
//
//	//Если количество разрядов нечётное пропустить число посередине
//	if (c % 2 != 0)
//		n /= 10;
//
//	//Половина 2
//	for (int i = 1; i <= c / 2; i++)
//	{
//		h2 += n % 10;
//
//		if (i != c / 2)
//			h2 *= 10;
//
//		n /= 10;
//	}
//
//	//Переворот 2 половины
//	t = 0;
//	for (int i = 1; i <= c / 2; i++)
//	{
//		t += h2 % 10;
//
//		if (i != c / 2)
//			t *= 10;
//
//		h2 /= 10;
//	}
//
//	h2 = t;
//
//	if (h1 == h2)
//		cout << "\nЭто число палиндром!\n";
//	else
//		cout << "\nЭто число не палиндром!\n";
//
//	return 0;
//}



/* 2. Осуществить циклический сдвиг влево введённого числа на N разрядов (например, при сдвиге числа 12345 влево на 3 разряда получится число 45123). */

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	int n;
//	int r;
//	int t;
//	int t_1n;
//	int r10 = 1;
//	int count = 0;
//
//	cout << "Введите число: ";
//	cin >> n;
//
//	cout << "Введите кол-во разрядов, которые вы хотите сместить влево: ";
//	cin >> r;
//
//	//Кол-во чисел
//	//r10 - Кол-во разрядов, на которые нужно поделить число, чтобы получить только первое значение
//	t = n;
//	for(; t > 0; t /= 10)
//	{
//		count++;
//		if(t > 9)
//			r10 *= 10;
//	}
//
//	//Вычисление
//	t = n;
//	for (int i = 0; i < r; i++)
//	{
//		t_1n = t / r10;
//		t = (t - t_1n * r10) * 10 + t_1n;
//	}
//
//	cout << "\nВаше число --> " << t << endl;
//
//	return 0;
//}



/* 3. Показать на экране все числа Армстронга в диапазоне от 0 до 10.000.000. */

//int main()
//{
//	int p, t, a;
//
//	for (int i = 0; i <= 10000000; i++)
//	{
//		t = i;
//		p = 0;
//		a = 0;
//
//		//Кол-во чисел
//		while (t > 0)
//		{
//			t /= 10;
//			p++;
//		}
//
//		t = i;
//
//		while (t > 0)
//		{
//			a += pow((t % 10), p);
//			t /= 10;
//		}
//
//		if (a == i)
//			cout << a << endl;
//	}
//}



/* 4. Показать на экране все совершенные числа в диапазоне от 0 до 10.000.000. */

//int main()
//{
//	int s;
//
//	for (__int64 i = 1; i <= 10000000; i++)
//	{
//		s = 0;
//
//		for (__int64 j = 1; j < i; j++)
//		{
//			if (i % j == 0)
//				s += j;
//		}
//
//		if (s == i)
//			cout << s << endl;
//	}
//
//	return 0;
//}



/* 5.	Показать на экране все числа Фибоначчи в диапазоне от 0 до 10.000.000. */

//int main()
//{
//	int n1 = 0, n2 = 1, num = 0;
//
//	while(true)
//	{
//		num = n1 + n2;
//
//		if (num > 10000001)
//			break;
//
//		cout << num << endl;
//
//		n1 = n2;
//		n2 = num;
//	}
//
//	return 0;
//}
//



/* 6. Вывести лестницу из отрезков определённой длины. Длина (например, 14) и количество ступенек (например, 4) указывается с клавиатуры.
		**************
		 **************
		  **************
		   **************
*/

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	int l, n, t;
//
//	cout << "Введите длину ступенек: ";
//	cin >> l;
//
//	cout << "Введите кол-во ступенек: ";
//	cin >> n;
//	
//	cout << endl;
//
//	for (int i = 1; i <= n; i++)
//	{
//		for (int j = 1; j <= l; j++)
//		{
//			cout << "*";
//		}
//
//		cout << endl;
//
//		t = i;
//
//		while (t > 0)
//		{
//			cout << " ";
//			t--;
//		}
//	}
// 
//  return 0;
//}



/* 7. Показать на экране лесенку. Количество ступенек (например, 5) указывает пользователь. */

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	int n, c = 0;
//
//	cout << "Введите кол-во ступенек: ";
//	cin >> n;
//
//	cout << endl;
//
//	for (int i = 0; i <= n; i++)
//	{
//		for (int j = 0; j < c; j++)
//			cout << "  ";
//
//		cout << "***";
//
//		c++;
//
//		cout << endl;
//
//		for(int j = 0; j < c; j++)
//			cout << "  ";
//
//		if(i != n)
//			cout << "*";
//
//		cout << endl;
//	}
//	
//	return 0;
//}


/* 8. Пользователь вводит дату (по отдельности день, месяц, год). Определить день недели, соответствующий введенной дате. При написании программы следует исходить из того, что 01.01.01 – это понедельник. */
/* BUGGED */


//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	int y, m, d;
//	int day_of_week = 0;
//	bool isDone = false;
//
//	cout << "Введите год: ";
//	cin >> y;
//	cout << "Введите месяц: ";
//	cin >> m;
//	cout << "Введите день: ";
//	cin >> d;
//
//	cout << endl;
//
//	for (int year = 1; year <= y; year++)
//	{
//		for (int month = 1; month < 13; month++)
//		{
//			for (int day = 1; day < 32; day++)
//			{
//				//Дата соответствует введённым данным
//				if (year == y && month == m && day == d)
//				{
//					day_of_week++;
//					if (day_of_week > 7)
//						day_of_week = 1;
//
//					isDone = true;
//					break;
//				}
//
//				//Месяца по 30 дней
//				if (day == 31 && (month == 4 || month == 6 || month == 9 || month == 11))
//				{
//					day = 32;
//					break;
//				}
//
//				//Переход с высокосного февраля
//				if (day == 30 && month == 2)
//				{
//					day = 32;
//					break;
//				}
//
//				//Февраль и Высокосный год
//				if (day == 29 && month == 2)
//				{
//					if (year % 4 == 0 || (year % 100 == 0 && year % 400 != 0))
//					{
//						day_of_week++;
//						if (day_of_week > 7)
//							day_of_week = 1;
//						break;
//					}
//					else
//					{
//						day = 32;
//						break;
//					}
//				}
//
//				day_of_week++;
//				if (day_of_week > 7)
//					day_of_week = 1;
//
//			}
//
//			if (isDone == true)
//				break;
//		}
//
//		if (isDone == true)
//			break;
//
//	}
//
//	switch (day_of_week)
//	{
//		case 1:
//		{
//			cout << "Понедельник.";
//			break;
//		}
//
//		case 2:
//		{
//			cout << "Вторник.";
//			break;
//		}
//
//		case 3:
//		{
//			cout << "Среда.";
//			break;
//		}
//
//		case 4:
//		{
//			cout << "Четверг.";
//			break;
//		}
//
//		case 5:
//		{
//			cout << "Пятница.";
//			break;
//		}
//
//		case 6:
//		{
//			cout << "Суббота.";
//			break;
//		}
//
//		case 7:
//		{
//			cout << "Воскресенье.";
//			break;
//		}
//	}
//
//	cout << endl;
//	return 0;
//}



/* 9.   В американской армии считается несчастливым число 13, а в китайской — 4. Перед совместными  учениями с американской и китайской армией,
	    штаб украинской армии решил исключить номера боевой техники, содержащие числа 4 или 13 (например, 40123, 13373, 12345 или 61342), чтобы не смущать иностранных коллег.
		Написать программу, которая определит, сколько номеров придется исключить, если в распоряжении армии имеется 100 тыс.единиц боевой техники и каждая боевая машина имеет номер от 00001 до 99999.
		Дополнительно вывести на экран все номера, которые необходимо исключить. */

//int main()
//{
//	int count = 0;
//	bool isNum = false;
//
//	for (int i = 1; i <= 99999; i++)
//	{
//		isNum = false;
//		int j = i;
//
//		while (j > 0)
//		{
//			if (j % 10 == 4 || (j % 100 == 13))
//			{
//				count++;
//				isNum = true;
//				break;
//			}
//
//			j /= 10;
//		}
//
//		if (isNum == true)
//			cout << i << ", ";
//	}
//
//	cout << "\n\nTotal num: " << count << endl;
//
//	return 0;
//}